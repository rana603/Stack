input 
3
{([])}
()
([]
output
balanced
balanced
not balanced

import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int k=0; k < n; k++){
            Stack<Character> st=new Stack<>();
            String str = sc.next();
            boolean flag = true;
            for(int i=0; i<str.length(); i++){
                char ch = str.charAt(i);
                if(ch=='(' || ch=='{' || ch=='['){
                    st.push(ch);
                }else if(st.isEmpty()){
                    flag = false;
                    break;
                }else {
                    if(ch==')' && st.pop()!='('){
                        flag = false;
                        break;
                    }else if(ch=='}' && st.pop()!='{' ){
                        flag = false;
                        break;
                    }else if(ch==']' && st.pop()!='['){
                        flag = false;
                        break;
                    }
                }
            }

            if(flag){
                if(!st.isEmpty()){
                    System.out.println("not balanced");
                }else{
                    System.out.println("balanced");
                }
            }else{
                System.out.println("not balanced");
            }
        }
    }
}





import java.util.*;
class Main {
    public static void main(String[] args) {
     
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        //int arr[] = new int[n];
        for(int k=0; k < n; k++){
            Stack<Character> st=new Stack<>();
            String str = sc.next();
            //System.out.println(str);
            boolean flag = true;
            for(int i=0; i<str.length(); i++){
                char ch = str.charAt(i);
                if(ch=='(' || ch=='{' || ch=='['){
                    st.push(ch);
                }else if(st.isEmpty()){
                    flag = false;
                    break;
                }else if(ch==')'){
                    if('('!=(char)st.pop()){
                        flag = false;
                        break;
                    }
                }else if(ch=='}'){
                    if('{'!=(char)st.pop()){
                        flag = false;
                        break;
                    }
                }else if(ch==']'){
                    if('['!=(char)st.pop()){
                        flag = false;
                        break;
                    }
                }
            }

            if(flag){
                if(!st.isEmpty()){
                    System.out.println("not balanced");
                }else{
                    System.out.println("balanced");
                }
            }else{
                System.out.println("not balanced");
            }
        }
    }
}




import java.util.*;
class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for(int k=0; k < n; k++){
            Stack<Character> st=new Stack<>();
            String str = sc.next();
            boolean flag = true;
            for(int i=0; i<str.length(); i++){
                char ch = str.charAt(i);
                if(ch=='(' || ch=='{' || ch=='['){
                    st.push(ch);
                }else{
                    if(st.isEmpty()){
                        flag = false;
                        break;
                    }else if(ch==')' && st.peek()!='('){
                        flag = false;
                        break;
                    }else if(ch=='}' && st.peek()!='{' ){
                        flag = false;
                        break;
                    }else if(ch==']' && st.peek()!='['){
                        flag = false;
                        break;
                    }
                    st.pop();
                }
            }

            if(flag){
                if(!st.isEmpty()){
                    System.out.println("not balanced");
                }else{
                    System.out.println("balanced");
                }
            }else{
                System.out.println("not balanced");
            }
        }
    }
}

leetcode
class Solution {
    public boolean isValid(String s) {
        Stack <Character> stack =new Stack();
        for(char c: s.toCharArray()){
            if (c=='(' || c=='{' || c=='['){
                stack.add(c);
            }else{
                if (stack.isEmpty()) return false;
                if (c==')' && stack.peek()!='(') return false;
                if (c=='}' && stack.peek()!='{') return false;
                if (c==']' && stack.peek()!='[') return false;
                stack.pop();
            }
       
    }
        return stack.isEmpty();
    }
}
